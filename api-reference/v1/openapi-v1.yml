openapi: 3.1.1
info:
  title: Metafy API
  version: v1
  contact:
    name: Metafy
    url: https://metafy.gg
    email: engineering@metafy.gg

servers:
  - url: https://metafy.gg/irk/api
    description: API Endpoint

security:
  - authorizationCode: []
  - clientCredentials: []
  - apiKeys: []

# Tags for organizing endpoints into categories
tags:
  - name: User
    description: Operations related to the authenticated users profile information
  - name: Community
    description: Operations related to the authenticated users community
  - name: Products
    description: Operations related to the product offerings of the authenticated user
  - name: Purchases
    description: Operations for verifying purchases and subscriptions

paths:
  /v1/me:
    get:
      tags:
        - User
      summary: Get Profile
      description: |
        This endpoint returns information about the authenticated account.
      operationId: getMe
      security:
        - authorizationCode: [profile]
        - clientCredentials: [profile]
        - apiKeys: [profile]
      responses:
        '200':
          description: User profile successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/sessions:
    get:
      tags:
        - Products
      summary: List Sessions
      description: |
        This endpoint returns a list of sessions that the authenticated account has on offer.
      operationId: getSessions
      security:
        - authorizationCode: [products]
        - clientCredentials: [products]
        - apiKeys: [products]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Sessions successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Session'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/events:
    get:
      tags:
        - Products
      summary: List Events
      description: |
        This endpoint returns a list of events that the authenticated account has on offer.
      operationId: getEvents
      security:
        - authorizationCode: [products]
        - clientCredentials: [products]
        - apiKeys: [products]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Events successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/guides:
    get:
      tags:
        - Products
      summary: List Guides
      description: |
        This endpoint returns a list of guides that the authenticated account has published.
      operationId: getMyGuides
      security:
        - authorizationCode: [products]
        - clientCredentials: [products]
        - apiKeys: [products]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Guides successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  guides:
                    type: array
                    items:
                      $ref: '#/components/schemas/Guide'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/community:
    get:
      tags:
        - Community
      summary: Get Community
      description: |
        This endpoint returns information about the commmunity owned by the authenticated account.
      operationId: getMyCommunity
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [community]
      responses:
        '200':
          description: Community information successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  community:
                    $ref: '#/components/schemas/Community'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/me/community/subscribers:
    get:
      tags:
        - Community
      summary: List Community Subscribers
      description: |
        This endpoint returns a paginated list of active subscribers to the authenticated account's community.
      operationId: getMyCommunitySubscribers
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [commmunity]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Subscribers successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscribers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscriber'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/me/community/members:
    get:
      tags:
        - Community
      summary: List Community Members
      description: |
        This endpoint returns a paginated list of all members of the authenticated account's community.
      operationId: getCommunityMembers
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [community]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Members successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/me/community/members/{userIdOrSlug}:
    get:
      tags:
        - Community
      summary: Get Community Member
      description: |
        This endpoint returns information on a community member if they exist.
      operationId: getCommunityMember
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [community]
      parameters:
        - name: userIdOrSlug
          in: path
          required: true
          description: ID or Slug of the user to check
          schema:
            type: string
      responses:
        '200':
          description: User is a member of the community
          content:
            application/json:
              schema:
                type: object
                properties:
                  member:
                    $ref: '#/components/schemas/Member'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/me/community/team/sessions:
    get:
      tags:
        - Community
      summary: List Team Sessions
      description: |
        This endpoint returns a list of sessions that members of your team have shared with your community.
      operationId: getCommunityTeamSessions
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [community]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Sessions successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  guides:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeamSession'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/community/team/events:
    get:
      tags:
        - Community
      summary: List Team Events
      description: |
        This endpoint returns a list of events that members of your team have shared with your community.
      operationId: getCommunityTeamEvents
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [community]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Events successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  guides:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeamEvent'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/community/team/guides:
    get:
      tags:
        - Community
      summary: List Team Guides
      description: |
        This endpoint returns a list of guides that members of your team have shared with your community.
      operationId: getCommunityTeamGuides
      security:
        - authorizationCode: [community]
        - clientCredentials: [community]
        - apiKeys: [community]
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Guides successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  guides:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeamGuide'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /v1/me/purchases/guides/{guideId}:
    get:
      tags:
        - Purchases
      summary: Purchased Guide
      description: |
        This endpoint determines if the authenticated account has access to read this guide.

        This could be from a purchase of the guide or from an active subscription benefit.
      operationId: checkGuideAccess
      security:
        - authorizationCode: [purchases]
        - clientCredentials: [purchases]
        - apiKeys: [purchases]
      parameters:
        - name: guideId
          in: path
          required: true
          description: ID of the guide to check access
          schema:
            type: string
      responses:
        '200':
          description: User has access to this guide
          content:
            application/json:
              schema:
                type: object
                properties:
                  guide:
                    $ref: '#/components/schemas/GuidePurchase'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/me/purchases/communities/{communityId}:
    get:
      tags:
        - Purchases
      summary: Purchased Subscription
      description: |
        This endpoint determines if the authenticated account has an active subscription to this community.
      operationId: checkCommunitySubscription
      security:
        - authorizationCode: [purchases]
        - clientCredentials: [purchases]
        - apiKeys: [purchases]
      parameters:
        - name: communityId
          in: path
          required: true
          description: ID of the community to check subscription
          schema:
            type: string
      responses:
        '200':
          description: User is subscribed to this community
          content:
            application/json:
              schema:
                type: object
                properties:
                  community:
                    $ref: '#/components/schemas/CommunitySubscription'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    clientCredentials:
      type: oauth2
      description: |
        This API uses OAuth 2 with the client credentials flow.

        You must pass in your `client_id` to the `Authorization` header using `Bearer`.
      flows:
        clientCredentials:
          tokenUrl: https://metafy.gg/irk/oauth/token
          scopes:
            profile: Access to the users basic profile information including email
            community: Access to users community, including member and subscriber details
            content: Access to products offered by the user on Metafy
            purchases: Verify purchases of the user
    authorizationCode:
      type: oauth2
      description: |
        This API uses OAuth 2 with the authorization code flow.

        You must pass in your `client_id` to the `Authorization` header using `Bearer`.
      flows:
        authorizationCode:
          authorizationUrl: https://metafy.gg/auth/authorize
          tokenUrl: https://metafy.gg/irk/oauth/token
          refreshUrl: https://metafy.gg/irk/oauth/token
          scopes:
            profile: Access to the users basic profile information including email
            community: Access to users community, including member and subscriber details
            content: Access to products offered by the user on Metafy
            purchases: Verify purchases of the user
    apiKeys:
      type: http
      description: |
        This uses API keys as the authorization method.

        You can pass in your API key to the `Authorization` header using `Bearer` or you can pass it as a query param `api_key`.
      scheme: bearer

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number for pagination
      schema:
        type: integer
        minimum: 1
        default: 1
      
    PerPageParam:
      name: per_page
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 100

  responses:
    Unauthorized:
      description: Authentication credentials are missing or invalid
    Forbidden:
      description: You do not have permission to access this resource
    NotFound:
      description: The resource was not found

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
        slug:
          type: string
          description: URL slug of the user
        name:
          type: string
          description: Display name of the user
        email:
          type: string
          format: email
          description: Email of the user
        partner:
          type: boolean
          description: Whether the user is a Metafy Partner or not
        profile_image_url:
          type: string
          format: uri
          description: URL to the profile image of the user
        cover_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to the cover image of the user

    Community:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the community
        title:
          type: string
          description: Name of the community
        description:
          type: string
          description: Description of the community
        logo_url:
          type: string
          format: uri
          nullable: true
          description: URL to the logo image of the community
        cover_url:
          type: string
          format: uri
          nullable: true
          description: URL to the cover image of the community
        url:
          type: string
          format: uri
          description: URL to the community on Metafy
        tiers:
          type: array
          description: List of tiers offered by the community
          items:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the tier
              name:
                type: string
                description: Name of the tier
              description:
                type: string
                description: Description of the tier
              cover_url:
                type: string
                format: uri
                nullable: true
                description: URL of the cover image for the tier

    Session:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the session
        slug:
          type: string
          description: Unique URL slug for the session
        session_count:
          type: number
          description: The number of schedulable sessions within this offering
        duration_seconds:
          type: number
          description: The duration of each of the schedulable sessions in seconds
        name:
          type: string
          description: Name of the session
        description:
          type: string
          description: Description of the session
        cover_url:
          type: string
          format: uri
          nullable: true
          description: URL to the cover image of the product
        price:
          $ref: '#/components/schemas/Money'

    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event
        slug:
          type: string
          description: Unique URL slug for the event
        duration_seconds:
          type: number
          description: Scheduled runtime for the event
        scheduled_at:
          type: string
          format: datetime
          description: The date and time when the event is scheduled for
        live_at:
          type: string
          format: datetime
          description: The date and time when the event went live
          nullable: true
        completed_at:
          type: string
          format: datetime
          description: The date and time when the event completed (went offline)
          nullable: true
        canceled_at:
          type: string
          format: datetime
          description: The date and time when the event was canceled
          nullable: true
        offer_replay_purchase:
          type: boolean
          description: Whether the event recording is available for sale once the event is complete
        name:
          type: string
          description: Name of the event
        description:
          type: string
          description: Description of the event
        cover_url:
          type: string
          format: uri
          nullable: true
          description: URL to the cover image of the product
        price:
          $ref: '#/components/schemas/Money'

    Guide:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the guide
        slug:
          type: string
          description: Unique URL slug for the guide
        published_at:
          type: string
          format: date-time
          description: When the guide was published
        name:
          type: string
          description: Name of the guide
        description:
          type: string
          description: Description of the guide
        cover_url:
          type: string
          format: uri
          nullable: true
          description: URL to the cover image of the product
        price:
          $ref: '#/components/schemas/Money'

    Subscriber:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the subscription
        subscribed_at:
          type: string
          format: date-time
          description: When the user subscribed to the community
        user_id:
          type: string
          description: Unique identifier of the user
        community_id:
          type: string
          description: Unique identifier of the community
        tier_id:
          type: string
          description: Unique identifier of the tier

    Member:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the member
        role:
          type: string
          description: Role of the member within the community
          enum: [admin, moderator, member]
        joined_at:
          type: string
          format: date-time
          description: When the user joined the community
        user_id:
          type: string
          description: Unique identifier of the user
        community_id:
          type: string
          description: Unique identifier of the community

    TeamUser:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
        slug:
          type: string
          description: URL slug of the user
        name:
          type: string
          description: Display name of the user
        partner:
          type: boolean
          description: Whether the user is a Metafy Partner or not
        profile_image_url:
          type: string
          format: uri
          description: URL to the profile image of the user
        cover_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to the cover image of the user

    TeamSession:
      allOf:
        - $ref: '#/components/schemas/Session'
        - type: object
          properties:
            account:
              $ref: '#/components/schemas/TeamUser'

    TeamEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          properties:
            account:
              $ref: '#/components/schemas/TeamUser'

    TeamGuide:
      allOf:
        - $ref: '#/components/schemas/Guide'
        - type: object
          properties:
            account:
              $ref: '#/components/schemas/TeamUser'

    GuidePurchase:
      type: object
      properties:
        has_access:
          type: boolean
          description: Whether the user has access to this guide

    CommunitySubscription:
      type: object
      properties:
        has_access:
          type: boolean
          description: Whether the user is a subscriber to this community
        tier_id:
          type: string
          nullable: true
          description: Unique identifier of the tier

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          description: The current page
        per_page:
          type: integer
          description: Number of items per page requested
        total_pages:
          type: integer
          description: The total number of pages

    Money:
      type: object
      properties:
        value:
          type: number
          description: The price of the product
        value_in_cents:
          type: integer
          description: The price in subunits
        currency:
          type: string
          description: The currency of the price. Always USD
